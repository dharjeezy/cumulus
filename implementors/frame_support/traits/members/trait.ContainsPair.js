(function() {var implementors = {
"assets_common":[["impl&lt;IsForeign:&nbsp;ContainsPair&lt;MultiLocation, MultiLocation&gt;&gt; ContainsPair&lt;MultiAsset, MultiLocation&gt; for <a class=\"struct\" href=\"assets_common/matching/struct.IsForeignConcreteAsset.html\" title=\"struct assets_common::matching::IsForeignConcreteAsset\">IsForeignConcreteAsset</a>&lt;IsForeign&gt;"],["impl&lt;SelfParaId:&nbsp;Get&lt;ParaId&gt;&gt; ContainsPair&lt;MultiLocation, MultiLocation&gt; for <a class=\"struct\" href=\"assets_common/matching/struct.FromSiblingParachain.html\" title=\"struct assets_common::matching::FromSiblingParachain\">FromSiblingParachain</a>&lt;SelfParaId&gt;"]],
"parachains_common":[["impl&lt;T:&nbsp;Get&lt;MultiLocation&gt;&gt; ContainsPair&lt;MultiAsset, MultiLocation&gt; for <a class=\"struct\" href=\"parachains_common/impls/struct.AssetsFrom.html\" title=\"struct parachains_common::impls::AssetsFrom\">AssetsFrom</a>&lt;T&gt;"],["impl&lt;Location:&nbsp;Get&lt;MultiLocation&gt;&gt; ContainsPair&lt;MultiAsset, MultiLocation&gt; for <a class=\"struct\" href=\"parachains_common/xcm_config/struct.ConcreteNativeAssetFrom.html\" title=\"struct parachains_common::xcm_config::ConcreteNativeAssetFrom\">ConcreteNativeAssetFrom</a>&lt;Location&gt;"]],
"penpal_runtime":[["impl&lt;T:&nbsp;Get&lt;MultiLocation&gt;&gt; ContainsPair&lt;MultiAsset, MultiLocation&gt; for <a class=\"struct\" href=\"penpal_runtime/xcm_config/struct.AssetsFrom.html\" title=\"struct penpal_runtime::xcm_config::AssetsFrom\">AssetsFrom</a>&lt;T&gt;"],["impl ContainsPair&lt;MultiAsset, MultiLocation&gt; for <a class=\"struct\" href=\"penpal_runtime/xcm_config/struct.MultiNativeAsset.html\" title=\"struct penpal_runtime::xcm_config::MultiNativeAsset\">MultiNativeAsset</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()